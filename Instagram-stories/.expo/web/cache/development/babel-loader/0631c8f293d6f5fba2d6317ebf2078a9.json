{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport AccessibilityUtil from \"../AccessibilityUtil\";\nimport css from \"../../exports/StyleSheet/css\";\nimport StyleSheet from \"../../exports/StyleSheet\";\nimport styleResolver from \"../../exports/StyleSheet/styleResolver\";\nimport { STYLE_GROUPS } from \"../../exports/StyleSheet/constants\";\nvar emptyObject = {};\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar defaultStyleResolver = function defaultStyleResolver(style, classList) {\n  return styleResolver.resolve(style, classList);\n};\n\nvar createDOMProps = function createDOMProps(component, props, styleResolver) {\n  if (!styleResolver) {\n    styleResolver = defaultStyleResolver;\n  }\n\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityStates = _props.accessibilityStates,\n      classList = _props.classList,\n      deprecatedClassName = _props.className,\n      importantForAccessibility = _props.importantForAccessibility,\n      nativeID = _props.nativeID,\n      placeholderTextColor = _props.placeholderTextColor,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityComponentType = _props.accessibilityComponentType,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityTraits = _props.accessibilityTraits,\n      domProps = _objectWithoutProperties(_props, [\"accessibilityLabel\", \"accessibilityLiveRegion\", \"accessibilityStates\", \"classList\", \"className\", \"importantForAccessibility\", \"nativeID\", \"placeholderTextColor\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityComponentType\", \"accessibilityRole\", \"accessibilityTraits\"]);\n\n  var disabled = AccessibilityUtil.isDisabled(props);\n  var role = AccessibilityUtil.propsToAriaRole(props);\n\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n\n  if (accessibilityLabel && accessibilityLabel.constructor === String) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLiveRegion && accessibilityLiveRegion.constructor === String) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (Array.isArray(accessibilityStates)) {\n    for (var i = 0; i < accessibilityStates.length; i += 1) {\n      domProps[\"aria-\" + accessibilityStates[i]] = true;\n    }\n  }\n\n  if (role && role.constructor === String) {\n    domProps.role = role;\n  }\n\n  if (disabled) {\n    domProps['aria-disabled'] = disabled;\n    domProps.disabled = disabled;\n  }\n\n  var focusable = !disabled && importantForAccessibility !== 'no' && importantForAccessibility !== 'no-hide-descendants';\n\n  if (role === 'link' || component === 'a' || component === 'button' || component === 'input' || component === 'select' || component === 'textarea') {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (AccessibilityUtil.buttonLikeRoles[role] || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  }\n\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], StyleSheet.compose(providedStyle, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  }));\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = component === 'a' || component === 'button' || component === 'li' || component === 'ul' || role === 'heading';\n  var finalClassList = [deprecatedClassName, needsReset && classes.reset, needsCursor && classes.cursor, classList];\n\n  var _styleResolver = styleResolver(reactNativeStyle, finalClassList),\n      className = _styleResolver.className,\n      style = _styleResolver.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  }\n\n  if (nativeID && nativeID.constructor === String) {\n    domProps.id = nativeID;\n  }\n\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = (domProps.rel || '') + \" noopener noreferrer\";\n  }\n\n  if (testID && testID.constructor === String) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;","map":{"version":3,"sources":["/home/swapnil/Downloads/Instagram-master (2)/node_modules/react-native-web/src/modules/createDOMProps/index.js"],"names":["AccessibilityUtil","css","StyleSheet","styleResolver","STYLE_GROUPS","emptyObject","classes","create","reset","backgroundColor","color","font","listStyle","margin","textAlign","textDecoration","cursor","classicReset","pointerEventsStyles","auto","pointerEvents","none","defaultStyleResolver","style","classList","resolve","createDOMProps","component","props","accessibilityLabel","accessibilityLiveRegion","accessibilityStates","deprecatedClassName","className","importantForAccessibility","nativeID","placeholderTextColor","providedStyle","testID","accessible","accessibilityComponentType","accessibilityRole","accessibilityTraits","domProps","disabled","isDisabled","role","propsToAriaRole","constructor","String","Array","isArray","i","length","focusable","tabIndex","buttonLikeRoles","reactNativeStyle","compose","needsCursor","needsReset","finalClassList","id","target","rel"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport css from '../../exports/StyleSheet/css';\nimport StyleSheet from '../../exports/StyleSheet';\nimport styleResolver from '../../exports/StyleSheet/styleResolver';\nimport { STYLE_GROUPS } from '../../exports/StyleSheet/constants';\n\nconst emptyObject = {};\n\n// Reset styles for heading, link, and list DOM elements\nconst classes = css.create(\n  {\n    reset: {\n      backgroundColor: 'transparent',\n      color: 'inherit',\n      font: 'inherit',\n      listStyle: 'none',\n      margin: 0,\n      textAlign: 'inherit',\n      textDecoration: 'none'\n    },\n    cursor: {\n      cursor: 'pointer'\n    }\n  },\n  STYLE_GROUPS.classicReset\n);\n\nconst pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nconst defaultStyleResolver = (style, classList) => styleResolver.resolve(style, classList);\n\nconst createDOMProps = (component, props, styleResolver) => {\n  if (!styleResolver) {\n    styleResolver = defaultStyleResolver;\n  }\n\n  if (!props) {\n    props = emptyObject;\n  }\n\n  const {\n    accessibilityLabel,\n    accessibilityLiveRegion,\n    accessibilityStates,\n    classList,\n    className: deprecatedClassName,\n    importantForAccessibility,\n    nativeID,\n    placeholderTextColor,\n    pointerEvents,\n    style: providedStyle,\n    testID,\n    /* eslint-disable */\n    accessible,\n    accessibilityComponentType,\n    accessibilityRole,\n    accessibilityTraits,\n    /* eslint-enable */\n    ...domProps\n  } = props;\n\n  const disabled = AccessibilityUtil.isDisabled(props);\n  const role = AccessibilityUtil.propsToAriaRole(props);\n\n  // GENERAL ACCESSIBILITY\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n  if (accessibilityLabel && accessibilityLabel.constructor === String) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n  if (accessibilityLiveRegion && accessibilityLiveRegion.constructor === String) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n  if (Array.isArray(accessibilityStates)) {\n    for (let i = 0; i < accessibilityStates.length; i += 1) {\n      domProps[`aria-${accessibilityStates[i]}`] = true;\n    }\n  }\n  if (role && role.constructor === String) {\n    domProps.role = role;\n  }\n\n  // DISABLED\n  if (disabled) {\n    domProps['aria-disabled'] = disabled;\n    domProps.disabled = disabled;\n  }\n\n  // FOCUS\n  // Assume that 'link' is focusable by default (uses <a>).\n  // Assume that 'button' is not (uses <div role='button'>) but must be treated as such.\n  const focusable =\n    !disabled &&\n    importantForAccessibility !== 'no' &&\n    importantForAccessibility !== 'no-hide-descendants';\n  if (\n    role === 'link' ||\n    component === 'a' ||\n    component === 'button' ||\n    component === 'input' ||\n    component === 'select' ||\n    component === 'textarea'\n  ) {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (AccessibilityUtil.buttonLikeRoles[role] || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  }\n\n  // STYLE\n  const reactNativeStyle = StyleSheet.compose(\n    pointerEvents && pointerEventsStyles[pointerEvents],\n    StyleSheet.compose(\n      providedStyle,\n      placeholderTextColor && { placeholderTextColor }\n    )\n  );\n\n  // Additional style resets for interactive elements\n  const needsCursor = (role === 'button' || role === 'link') && !disabled;\n  const needsReset =\n    component === 'a' ||\n    component === 'button' ||\n    component === 'li' ||\n    component === 'ul' ||\n    role === 'heading';\n  // Classic CSS styles\n  const finalClassList = [\n    deprecatedClassName,\n    needsReset && classes.reset,\n    needsCursor && classes.cursor,\n    classList\n  ];\n\n  // Resolve styles\n  const { className, style } = styleResolver(reactNativeStyle, finalClassList);\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  }\n\n  // OTHER\n  // Native element ID\n  if (nativeID && nativeID.constructor === String) {\n    domProps.id = nativeID;\n  }\n\n  // Link security\n  // https://mathiasbynens.github.io/rel-noopener/\n  // Note: using \"noreferrer\" doesn't impact referrer tracking for https\n  // transfers (i.e., from https to https).\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = `${domProps.rel || ''} noopener noreferrer`;\n  }\n  // Automated test IDs\n  if (testID && testID.constructor === String) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;\n"]},"metadata":{},"sourceType":"module"}