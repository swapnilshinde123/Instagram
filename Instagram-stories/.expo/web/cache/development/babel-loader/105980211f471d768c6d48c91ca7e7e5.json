{"ast":null,"code":"import normalizeNativeEvent from \"../normalizeNativeEvent\";\nimport ReactDOMUnstableNativeDependencies from 'react-dom/unstable-native-dependencies';\nvar ResponderEventPlugin = ReactDOMUnstableNativeDependencies.ResponderEventPlugin,\n    ResponderTouchHistoryStore = ReactDOMUnstableNativeDependencies.ResponderTouchHistoryStore;\n\nif (!ResponderEventPlugin.eventTypes.responderMove.dependencies) {\n  var topMouseDown = 'topMouseDown';\n  var topMouseMove = 'topMouseMove';\n  var topMouseUp = 'topMouseUp';\n  var topScroll = 'topScroll';\n  var topSelectionChange = 'topSelectionChange';\n  var topTouchCancel = 'topTouchCancel';\n  var topTouchEnd = 'topTouchEnd';\n  var topTouchMove = 'topTouchMove';\n  var topTouchStart = 'topTouchStart';\n  var endDependencies = [topTouchCancel, topTouchEnd, topMouseUp];\n  var moveDependencies = [topTouchMove, topMouseMove];\n  var startDependencies = [topTouchStart, topMouseDown];\n  ResponderEventPlugin.eventTypes.responderMove.dependencies = moveDependencies;\n  ResponderEventPlugin.eventTypes.responderEnd.dependencies = endDependencies;\n  ResponderEventPlugin.eventTypes.responderStart.dependencies = startDependencies;\n  ResponderEventPlugin.eventTypes.responderRelease.dependencies = endDependencies;\n  ResponderEventPlugin.eventTypes.responderTerminationRequest.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderGrant.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderReject.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderTerminate.dependencies = [];\n  ResponderEventPlugin.eventTypes.moveShouldSetResponder.dependencies = moveDependencies;\n  ResponderEventPlugin.eventTypes.selectionChangeShouldSetResponder.dependencies = [topSelectionChange];\n  ResponderEventPlugin.eventTypes.scrollShouldSetResponder.dependencies = [topScroll];\n  ResponderEventPlugin.eventTypes.startShouldSetResponder.dependencies = startDependencies;\n}\n\nvar lastActiveTouchTimestamp = null;\nvar EMULATED_MOUSE_THERSHOLD_MS = 1000;\nvar originalExtractEvents = ResponderEventPlugin.extractEvents;\n\nResponderEventPlugin.extractEvents = function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var hasActiveTouches = ResponderTouchHistoryStore.touchHistory.numberActiveTouches > 0;\n  var eventType = nativeEvent.type;\n  var shouldSkipMouseAfterTouch = false;\n\n  if (eventType.indexOf('touch') > -1) {\n    lastActiveTouchTimestamp = Date.now();\n  } else if (lastActiveTouchTimestamp && eventType.indexOf('mouse') > -1) {\n    var now = Date.now();\n    shouldSkipMouseAfterTouch = now - lastActiveTouchTimestamp < EMULATED_MOUSE_THERSHOLD_MS;\n  }\n\n  if ((eventType === 'mousemove' || eventType === 'mouseup') && !hasActiveTouches || nativeEvent.button === 1 || nativeEvent.button === 2 || shouldSkipMouseAfterTouch) {\n    return;\n  }\n\n  var normalizedEvent = normalizeNativeEvent(nativeEvent);\n  return originalExtractEvents.call(ResponderEventPlugin, topLevelType, targetInst, normalizedEvent, nativeEventTarget);\n};\n\nexport default ResponderEventPlugin;","map":{"version":3,"sources":["/home/swapnil/Downloads/Instagram-master (2)/node_modules/react-native-web/src/modules/ResponderEventPlugin/index.js"],"names":["normalizeNativeEvent","ReactDOMUnstableNativeDependencies","ResponderEventPlugin","ResponderTouchHistoryStore","eventTypes","responderMove","dependencies","topMouseDown","topMouseMove","topMouseUp","topScroll","topSelectionChange","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","endDependencies","moveDependencies","startDependencies","responderEnd","responderStart","responderRelease","responderTerminationRequest","responderGrant","responderReject","responderTerminate","moveShouldSetResponder","selectionChangeShouldSetResponder","scrollShouldSetResponder","startShouldSetResponder","lastActiveTouchTimestamp","EMULATED_MOUSE_THERSHOLD_MS","originalExtractEvents","extractEvents","topLevelType","targetInst","nativeEvent","nativeEventTarget","hasActiveTouches","touchHistory","numberActiveTouches","eventType","type","shouldSkipMouseAfterTouch","indexOf","Date","now","button","normalizedEvent","call"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\n// based on https://github.com/facebook/react/pull/4303/files\n\nimport normalizeNativeEvent from '../normalizeNativeEvent';\nimport ReactDOMUnstableNativeDependencies from 'react-dom/unstable-native-dependencies';\n\nconst { ResponderEventPlugin, ResponderTouchHistoryStore } = ReactDOMUnstableNativeDependencies;\n\n// On older versions of React (< 16.4) we have to inject the dependencies in\n// order for the plugin to work properly in the browser. This version still\n// uses `top*` strings to identify the internal event names.\n// https://github.com/facebook/react/pull/12629\nif (!ResponderEventPlugin.eventTypes.responderMove.dependencies) {\n  const topMouseDown = 'topMouseDown';\n  const topMouseMove = 'topMouseMove';\n  const topMouseUp = 'topMouseUp';\n  const topScroll = 'topScroll';\n  const topSelectionChange = 'topSelectionChange';\n  const topTouchCancel = 'topTouchCancel';\n  const topTouchEnd = 'topTouchEnd';\n  const topTouchMove = 'topTouchMove';\n  const topTouchStart = 'topTouchStart';\n\n  const endDependencies = [topTouchCancel, topTouchEnd, topMouseUp];\n  const moveDependencies = [topTouchMove, topMouseMove];\n  const startDependencies = [topTouchStart, topMouseDown];\n\n  /**\n   * Setup ResponderEventPlugin dependencies\n   */\n  ResponderEventPlugin.eventTypes.responderMove.dependencies = moveDependencies;\n  ResponderEventPlugin.eventTypes.responderEnd.dependencies = endDependencies;\n  ResponderEventPlugin.eventTypes.responderStart.dependencies = startDependencies;\n  ResponderEventPlugin.eventTypes.responderRelease.dependencies = endDependencies;\n  ResponderEventPlugin.eventTypes.responderTerminationRequest.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderGrant.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderReject.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderTerminate.dependencies = [];\n  ResponderEventPlugin.eventTypes.moveShouldSetResponder.dependencies = moveDependencies;\n  ResponderEventPlugin.eventTypes.selectionChangeShouldSetResponder.dependencies = [\n    topSelectionChange\n  ];\n  ResponderEventPlugin.eventTypes.scrollShouldSetResponder.dependencies = [topScroll];\n  ResponderEventPlugin.eventTypes.startShouldSetResponder.dependencies = startDependencies;\n}\n\nlet lastActiveTouchTimestamp = null;\n// The length of time after a touch that we ignore the browser's emulated mouse events\n// https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Using_Touch_Events\nconst EMULATED_MOUSE_THERSHOLD_MS = 1000;\n\nconst originalExtractEvents = ResponderEventPlugin.extractEvents;\nResponderEventPlugin.extractEvents = (topLevelType, targetInst, nativeEvent, nativeEventTarget) => {\n  const hasActiveTouches = ResponderTouchHistoryStore.touchHistory.numberActiveTouches > 0;\n  const eventType = nativeEvent.type;\n\n  let shouldSkipMouseAfterTouch = false;\n  if (eventType.indexOf('touch') > -1) {\n    lastActiveTouchTimestamp = Date.now();\n  } else if (lastActiveTouchTimestamp && eventType.indexOf('mouse') > -1) {\n    const now = Date.now();\n    shouldSkipMouseAfterTouch = now - lastActiveTouchTimestamp < EMULATED_MOUSE_THERSHOLD_MS;\n  }\n\n  if (\n    // Filter out mousemove and mouseup events when a touch hasn't started yet\n    ((eventType === 'mousemove' || eventType === 'mouseup') && !hasActiveTouches) ||\n    // Filter out events from wheel/middle and right click.\n    (nativeEvent.button === 1 || nativeEvent.button === 2) ||\n    // Filter out mouse events that browsers dispatch immediately after touch events end\n    // Prevents the REP from calling handlers twice for touch interactions.\n    // See #802 and #932.\n    shouldSkipMouseAfterTouch\n  ) {\n    return;\n  }\n\n  const normalizedEvent = normalizeNativeEvent(nativeEvent);\n\n  return originalExtractEvents.call(\n    ResponderEventPlugin,\n    topLevelType,\n    targetInst,\n    normalizedEvent,\n    nativeEventTarget\n  );\n};\n\nexport default ResponderEventPlugin;\n"]},"metadata":{},"sourceType":"module"}