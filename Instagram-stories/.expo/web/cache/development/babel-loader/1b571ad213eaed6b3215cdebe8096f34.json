{"ast":null,"code":"import getBoundingClientRect from \"../getBoundingClientRect\";\nvar emptyArray = [];\n\nvar emptyFunction = function emptyFunction() {};\n\nvar normalizeTouches = function normalizeTouches(touches) {\n  if (!touches) {\n    return emptyArray;\n  }\n\n  return Array.prototype.slice.call(touches).map(function (touch) {\n    var identifier = touch.identifier > 20 ? touch.identifier % 20 : touch.identifier;\n    var rect;\n    return {\n      _normalized: true,\n      clientX: touch.clientX,\n      clientY: touch.clientY,\n      force: touch.force,\n\n      get locationX() {\n        rect = rect || getBoundingClientRect(touch.target);\n\n        if (rect) {\n          return touch.pageX - rect.left;\n        }\n      },\n\n      get locationY() {\n        rect = rect || getBoundingClientRect(touch.target);\n\n        if (rect) {\n          return touch.pageY - rect.top;\n        }\n      },\n\n      identifier: identifier,\n      pageX: touch.pageX,\n      pageY: touch.pageY,\n      radiusX: touch.radiusX,\n      radiusY: touch.radiusY,\n      rotationAngle: touch.rotationAngle,\n      screenX: touch.screenX,\n      screenY: touch.screenY,\n      target: touch.target,\n      timestamp: Date.now()\n    };\n  });\n};\n\nfunction normalizeTouchEvent(nativeEvent) {\n  var changedTouches = normalizeTouches(nativeEvent.changedTouches);\n  var touches = normalizeTouches(nativeEvent.touches);\n  var preventDefault = typeof nativeEvent.preventDefault === 'function' ? nativeEvent.preventDefault.bind(nativeEvent) : emptyFunction;\n  var stopImmediatePropagation = typeof nativeEvent.stopImmediatePropagation === 'function' ? nativeEvent.stopImmediatePropagation.bind(nativeEvent) : emptyFunction;\n  var stopPropagation = typeof nativeEvent.stopPropagation === 'function' ? nativeEvent.stopPropagation.bind(nativeEvent) : emptyFunction;\n  var singleChangedTouch = changedTouches[0];\n  var event = {\n    _normalized: true,\n    bubbles: nativeEvent.bubbles,\n    cancelable: nativeEvent.cancelable,\n    changedTouches: changedTouches,\n    defaultPrevented: nativeEvent.defaultPrevented,\n    identifier: singleChangedTouch ? singleChangedTouch.identifier : undefined,\n\n    get locationX() {\n      return singleChangedTouch ? singleChangedTouch.locationX : undefined;\n    },\n\n    get locationY() {\n      return singleChangedTouch ? singleChangedTouch.locationY : undefined;\n    },\n\n    pageX: singleChangedTouch ? singleChangedTouch.pageX : nativeEvent.pageX,\n    pageY: singleChangedTouch ? singleChangedTouch.pageY : nativeEvent.pageY,\n    preventDefault: preventDefault,\n    stopImmediatePropagation: stopImmediatePropagation,\n    stopPropagation: stopPropagation,\n    target: nativeEvent.target,\n    timestamp: Date.now(),\n    touches: touches,\n    type: nativeEvent.type,\n    which: nativeEvent.which\n  };\n  return event;\n}\n\nfunction normalizeMouseEvent(nativeEvent) {\n  var rect;\n  var touches = [{\n    _normalized: true,\n    clientX: nativeEvent.clientX,\n    clientY: nativeEvent.clientY,\n    force: nativeEvent.force,\n    identifier: 0,\n\n    get locationX() {\n      rect = rect || getBoundingClientRect(nativeEvent.target);\n\n      if (rect) {\n        return nativeEvent.pageX - rect.left;\n      }\n    },\n\n    get locationY() {\n      rect = rect || getBoundingClientRect(nativeEvent.target);\n\n      if (rect) {\n        return nativeEvent.pageY - rect.top;\n      }\n    },\n\n    pageX: nativeEvent.pageX,\n    pageY: nativeEvent.pageY,\n    screenX: nativeEvent.screenX,\n    screenY: nativeEvent.screenY,\n    target: nativeEvent.target,\n    timestamp: Date.now()\n  }];\n  var preventDefault = typeof nativeEvent.preventDefault === 'function' ? nativeEvent.preventDefault.bind(nativeEvent) : emptyFunction;\n  var stopImmediatePropagation = typeof nativeEvent.stopImmediatePropagation === 'function' ? nativeEvent.stopImmediatePropagation.bind(nativeEvent) : emptyFunction;\n  var stopPropagation = typeof nativeEvent.stopPropagation === 'function' ? nativeEvent.stopPropagation.bind(nativeEvent) : emptyFunction;\n  return {\n    _normalized: true,\n    bubbles: nativeEvent.bubbles,\n    cancelable: nativeEvent.cancelable,\n    changedTouches: touches,\n    defaultPrevented: nativeEvent.defaultPrevented,\n    identifier: touches[0].identifier,\n\n    get locationX() {\n      return touches[0].locationX;\n    },\n\n    get locationY() {\n      return touches[0].locationY;\n    },\n\n    pageX: nativeEvent.pageX,\n    pageY: nativeEvent.pageY,\n    preventDefault: preventDefault,\n    stopImmediatePropagation: stopImmediatePropagation,\n    stopPropagation: stopPropagation,\n    target: nativeEvent.target,\n    timestamp: touches[0].timestamp,\n    touches: nativeEvent.type === 'mouseup' ? emptyArray : touches,\n    type: nativeEvent.type,\n    which: nativeEvent.which\n  };\n}\n\nfunction normalizeNativeEvent(nativeEvent) {\n  if (!nativeEvent || nativeEvent._normalized) {\n    return nativeEvent;\n  }\n\n  var eventType = nativeEvent.type || '';\n  var mouse = eventType.indexOf('mouse') >= 0;\n\n  if (mouse) {\n    return normalizeMouseEvent(nativeEvent);\n  } else {\n    return normalizeTouchEvent(nativeEvent);\n  }\n}\n\nexport default normalizeNativeEvent;","map":{"version":3,"sources":["/home/swapnil/Downloads/Instagram-master (2)/node_modules/react-native-web/src/modules/normalizeNativeEvent/index.js"],"names":["getBoundingClientRect","emptyArray","emptyFunction","normalizeTouches","touches","Array","prototype","slice","call","map","touch","identifier","rect","_normalized","clientX","clientY","force","locationX","target","pageX","left","locationY","pageY","top","radiusX","radiusY","rotationAngle","screenX","screenY","timestamp","Date","now","normalizeTouchEvent","nativeEvent","changedTouches","preventDefault","bind","stopImmediatePropagation","stopPropagation","singleChangedTouch","event","bubbles","cancelable","defaultPrevented","undefined","type","which","normalizeMouseEvent","normalizeNativeEvent","eventType","mouse","indexOf"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport getBoundingClientRect from '../getBoundingClientRect';\n\nconst emptyArray = [];\nconst emptyFunction = () => {};\n\n// Mobile Safari re-uses touch objects, so we copy the properties we want and normalize the identifier\nconst normalizeTouches = touches => {\n  if (!touches) {\n    return emptyArray;\n  }\n\n  return Array.prototype.slice.call(touches).map(touch => {\n    const identifier = touch.identifier > 20 ? touch.identifier % 20 : touch.identifier;\n    let rect;\n\n    return {\n      _normalized: true,\n      clientX: touch.clientX,\n      clientY: touch.clientY,\n      force: touch.force,\n      get locationX() {\n        rect = rect || getBoundingClientRect(touch.target);\n        if (rect) {\n          return touch.pageX - rect.left;\n        }\n      },\n      get locationY() {\n        rect = rect || getBoundingClientRect(touch.target);\n        if (rect) {\n          return touch.pageY - rect.top;\n        }\n      },\n      identifier: identifier,\n      pageX: touch.pageX,\n      pageY: touch.pageY,\n      radiusX: touch.radiusX,\n      radiusY: touch.radiusY,\n      rotationAngle: touch.rotationAngle,\n      screenX: touch.screenX,\n      screenY: touch.screenY,\n      target: touch.target,\n      // normalize the timestamp\n      // https://stackoverflow.com/questions/26177087/ios-8-mobile-safari-wrong-timestamp-on-touch-events\n      timestamp: Date.now()\n    };\n  });\n};\n\nfunction normalizeTouchEvent(nativeEvent) {\n  const changedTouches = normalizeTouches(nativeEvent.changedTouches);\n  const touches = normalizeTouches(nativeEvent.touches);\n\n  const preventDefault =\n    typeof nativeEvent.preventDefault === 'function'\n      ? nativeEvent.preventDefault.bind(nativeEvent)\n      : emptyFunction;\n  const stopImmediatePropagation =\n    typeof nativeEvent.stopImmediatePropagation === 'function'\n      ? nativeEvent.stopImmediatePropagation.bind(nativeEvent)\n      : emptyFunction;\n  const stopPropagation =\n    typeof nativeEvent.stopPropagation === 'function'\n      ? nativeEvent.stopPropagation.bind(nativeEvent)\n      : emptyFunction;\n  const singleChangedTouch = changedTouches[0];\n\n  const event = {\n    _normalized: true,\n    bubbles: nativeEvent.bubbles,\n    cancelable: nativeEvent.cancelable,\n    changedTouches,\n    defaultPrevented: nativeEvent.defaultPrevented,\n    identifier: singleChangedTouch ? singleChangedTouch.identifier : undefined,\n    get locationX() {\n      return singleChangedTouch ? singleChangedTouch.locationX : undefined;\n    },\n    get locationY() {\n      return singleChangedTouch ? singleChangedTouch.locationY : undefined;\n    },\n    pageX: singleChangedTouch ? singleChangedTouch.pageX : nativeEvent.pageX,\n    pageY: singleChangedTouch ? singleChangedTouch.pageY : nativeEvent.pageY,\n    preventDefault,\n    stopImmediatePropagation,\n    stopPropagation,\n    target: nativeEvent.target,\n    // normalize the timestamp\n    // https://stackoverflow.com/questions/26177087/ios-8-mobile-safari-wrong-timestamp-on-touch-events\n    timestamp: Date.now(),\n    touches,\n    type: nativeEvent.type,\n    which: nativeEvent.which\n  };\n\n  return event;\n}\n\nfunction normalizeMouseEvent(nativeEvent) {\n  let rect;\n\n  const touches = [\n    {\n      _normalized: true,\n      clientX: nativeEvent.clientX,\n      clientY: nativeEvent.clientY,\n      force: nativeEvent.force,\n      identifier: 0,\n      get locationX() {\n        rect = rect || getBoundingClientRect(nativeEvent.target);\n        if (rect) {\n          return nativeEvent.pageX - rect.left;\n        }\n      },\n      get locationY() {\n        rect = rect || getBoundingClientRect(nativeEvent.target);\n        if (rect) {\n          return nativeEvent.pageY - rect.top;\n        }\n      },\n      pageX: nativeEvent.pageX,\n      pageY: nativeEvent.pageY,\n      screenX: nativeEvent.screenX,\n      screenY: nativeEvent.screenY,\n      target: nativeEvent.target,\n      timestamp: Date.now()\n    }\n  ];\n\n  const preventDefault =\n    typeof nativeEvent.preventDefault === 'function'\n      ? nativeEvent.preventDefault.bind(nativeEvent)\n      : emptyFunction;\n  const stopImmediatePropagation =\n    typeof nativeEvent.stopImmediatePropagation === 'function'\n      ? nativeEvent.stopImmediatePropagation.bind(nativeEvent)\n      : emptyFunction;\n  const stopPropagation =\n    typeof nativeEvent.stopPropagation === 'function'\n      ? nativeEvent.stopPropagation.bind(nativeEvent)\n      : emptyFunction;\n\n  return {\n    _normalized: true,\n    bubbles: nativeEvent.bubbles,\n    cancelable: nativeEvent.cancelable,\n    changedTouches: touches,\n    defaultPrevented: nativeEvent.defaultPrevented,\n    identifier: touches[0].identifier,\n    get locationX() {\n      return touches[0].locationX;\n    },\n    get locationY() {\n      return touches[0].locationY;\n    },\n    pageX: nativeEvent.pageX,\n    pageY: nativeEvent.pageY,\n    preventDefault,\n    stopImmediatePropagation,\n    stopPropagation,\n    target: nativeEvent.target,\n    timestamp: touches[0].timestamp,\n    touches: nativeEvent.type === 'mouseup' ? emptyArray : touches,\n    type: nativeEvent.type,\n    which: nativeEvent.which\n  };\n}\n\n// TODO: how to best handle keyboard events?\nfunction normalizeNativeEvent(nativeEvent: Object) {\n  if (!nativeEvent || nativeEvent._normalized) {\n    return nativeEvent;\n  }\n  const eventType = nativeEvent.type || '';\n  const mouse = eventType.indexOf('mouse') >= 0;\n  if (mouse) {\n    return normalizeMouseEvent(nativeEvent);\n  } else {\n    return normalizeTouchEvent(nativeEvent);\n  }\n}\n\nexport default normalizeNativeEvent;\n"]},"metadata":{},"sourceType":"module"}