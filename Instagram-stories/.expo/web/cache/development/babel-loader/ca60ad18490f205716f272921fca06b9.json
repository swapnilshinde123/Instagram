{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = undefined;\nvar _jsxFileName = 'src/basic/Button.js';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _commonColor = require(\"../theme/variables/commonColor\");\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _Text = require(\"./Text\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Button = function (_React$PureComponent) {\n  _inherits(Button, _React$PureComponent);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));\n  }\n\n  _createClass(Button, [{\n    key: 'setRoot',\n    value: function setRoot(c) {\n      this._root = c;\n    }\n  }, {\n    key: 'getInitialStyle',\n    value: function getInitialStyle() {\n      return {\n        borderedBtn: {\n          borderWidth: this.props.bordered ? _platform2.default.buttonDefaultBorderWidth : undefined,\n          borderRadius: this.props.rounded && this.props.bordered ? _platform2.default.borderRadiusLarge : _platform2.default.buttonDefaultBorderRadius\n        }\n      };\n    }\n  }, {\n    key: 'prepareRootProps',\n    value: function prepareRootProps() {\n      var _props = this.props,\n          style = _props.style,\n          others = _objectWithoutProperties(_props, ['style']);\n\n      return _extends({\n        style: _reactNative.StyleSheet.flatten(_reactNative.StyleSheet.compose(this.getInitialStyle().borderedBtn, style))\n      }, others);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      var children = _reactNative.Platform.OS === _commonColor.PLATFORM.IOS || !variables.buttonUppercaseAndroidText ? this.props.children : _react2.default.Children.map(this.props.children, function (child) {\n        return child && child.type === _Text.Text ? _react2.default.cloneElement(child, _extends({\n          uppercase: _this2.props.buttonUppercaseAndroidText === false ? false : variables.buttonUppercaseAndroidText\n        }, child.props)) : child;\n      });\n      var rootProps = this.prepareRootProps();\n\n      if (_reactNative.Platform.OS === _commonColor.PLATFORM.IOS || _reactNative.Platform.OS === _commonColor.PLATFORM.WEB || variables.androidRipple === false || _reactNative.Platform.Version < 21) {\n        return _react2.default.createElement(_reactNative.TouchableOpacity, _extends({}, rootProps, {\n          ref: this.setRoot,\n          activeOpacity: this.props.activeOpacity > 0 ? this.props.activeOpacity : _platform2.default.buttonDefaultActiveOpacity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          }\n        }), children);\n      }\n\n      if (this.props.rounded) {\n        var buttonStyle = _extends({}, rootProps.style);\n\n        var buttonFlex = this.props.full || this.props.block ? _platform2.default.buttonDefaultFlex : buttonStyle.flex;\n        return _react2.default.createElement(_reactNative.View, {\n          style: [{\n            maxHeight: buttonStyle.height\n          }, buttonStyle, {\n            paddingTop: undefined,\n            paddingBottom: undefined\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          }\n        }, _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n          ref: this.setRoot,\n          background: _reactNative.TouchableNativeFeedback.Ripple(this.props.androidRippleColor || variables.androidRippleColor, true)\n        }, rootProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          }\n        }), _react2.default.createElement(_reactNative.View, {\n          style: [styles.childContainer, {\n            paddingTop: buttonStyle.paddingTop,\n            paddingBottom: buttonStyle.paddingBottom,\n            height: buttonStyle.height,\n            flexGrow: buttonFlex\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          }\n        }, children)));\n      }\n\n      return _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n        ref: this.setRoot,\n        onPress: this.props.onPress,\n        background: this.props.transparent ? _reactNative.TouchableNativeFeedback.Ripple('transparent') : _reactNative.TouchableNativeFeedback.Ripple(variables.androidRippleColor, false)\n      }, rootProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }), _react2.default.createElement(_reactNative.View, _extends({}, rootProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }), children));\n    }\n  }]);\n\n  return Button;\n}(_react2.default.PureComponent);\n\nButton.contextTypes = {\n  theme: _propTypes2.default.object\n};\nButton.propTypes = _extends({}, _reactNative.TouchableOpacity.propTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  block: _propTypes2.default.bool,\n  primary: _propTypes2.default.bool,\n  transparent: _propTypes2.default.bool,\n  success: _propTypes2.default.bool,\n  danger: _propTypes2.default.bool,\n  warning: _propTypes2.default.bool,\n  info: _propTypes2.default.bool,\n  bordered: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  rounded: _propTypes2.default.bool,\n  large: _propTypes2.default.bool,\n  small: _propTypes2.default.bool,\n  active: _propTypes2.default.bool\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  childContainer: {\n    flexShrink: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nvar StyledButton = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Button', {}, _mapPropsToStyleNames2.default)(Button);\nexports.Button = StyledButton;","map":{"version":3,"sources":["../../../src/basic/Button.js"],"names":["Button","React","PureComponent","contextTypes","theme","PropTypes","c","borderedBtn","borderWidth","variable","borderRadius","style","others","StyleSheet","variables","children","Platform","PLATFORM","child","Text","uppercase","rootProps","buttonStyle","buttonFlex","maxHeight","paddingTop","paddingBottom","TouchableNativeFeedback","styles","height","flexGrow","TouchableOpacity","block","primary","transparent","success","danger","warning","info","bordered","disabled","rounded","large","small","active","childContainer","flexShrink","flexDirection","justifyContent","alignItems","StyledButton","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["/* eslint-disable new-cap */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  Platform,\n  View,\n  TouchableNativeFeedback,\n  StyleSheet\n} from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport variable from '../theme/variables/platform';\nimport { PLATFORM } from '../theme/variables/commonColor';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nimport { Text } from './Text';\n\n\nclass Button extends React.PureComponent {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  setRoot(c){\n    this._root = c;\n  }\n\n  getInitialStyle() {\n    return {\n      borderedBtn: {\n        borderWidth: this.props.bordered\n          ? variable.buttonDefaultBorderWidth\n          : undefined,\n        borderRadius:\n          this.props.rounded && this.props.bordered\n            ? variable.borderRadiusLarge\n            : variable.buttonDefaultBorderRadius\n      }\n    };\n  }\n\n  prepareRootProps() {\n\n    const {style, ...others} = this.props;\n\n    return {\n      style: StyleSheet.flatten(StyleSheet.compose(this.getInitialStyle().borderedBtn, style)),\n      ...others\n    }\n\n  }\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    const children =\n      Platform.OS === PLATFORM.IOS || !variables.buttonUppercaseAndroidText\n        ? this.props.children\n        : React.Children.map(this.props.children, child =>\n            child && child.type === Text\n              ? React.cloneElement(child, {\n                uppercase: this.props.buttonUppercaseAndroidText === false\n                ? false : variables.buttonUppercaseAndroidText,\n                ...child.props\n              })\n              : child\n          );\n\n    const rootProps = this.prepareRootProps();\n\n    if (\n      Platform.OS === PLATFORM.IOS ||\n      Platform.OS === PLATFORM.WEB ||\n      variables.androidRipple === false ||\n      Platform.Version < 21\n    ) {\n      return (\n        <TouchableOpacity\n          {...rootProps}\n          ref={this.setRoot}\n          activeOpacity={\n            this.props.activeOpacity > 0\n              ? this.props.activeOpacity\n              : variable.buttonDefaultActiveOpacity\n          }\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    }\n    if (this.props.rounded) {\n      const buttonStyle = { ...rootProps.style };\n      const buttonFlex =\n        this.props.full || this.props.block\n          ? variable.buttonDefaultFlex\n          : buttonStyle.flex;\n      return (\n        <View\n          style={[\n            { maxHeight: buttonStyle.height },\n            buttonStyle,\n            { paddingTop: undefined, paddingBottom: undefined }\n          ]}\n        >\n          <TouchableNativeFeedback\n            ref={this.setRoot}\n            background={TouchableNativeFeedback.Ripple(\n              this.props.androidRippleColor || variables.androidRippleColor,\n              true\n            )}\n            {...rootProps}\n          >\n            <View\n              style={[\n                // eslint-disable-next-line no-use-before-define\n                styles.childContainer,\n                {\n                  paddingTop: buttonStyle.paddingTop,\n                  paddingBottom: buttonStyle.paddingBottom,\n                  height: buttonStyle.height,\n                  flexGrow: buttonFlex\n                }\n              ]}\n            >\n              {children}\n            </View>\n          </TouchableNativeFeedback>\n        </View>\n      );\n    }\n    return (\n      <TouchableNativeFeedback\n        ref={this.setRoot}\n        onPress={this.props.onPress}\n        background={\n          this.props.transparent\n            ? TouchableNativeFeedback.Ripple('transparent')\n            : TouchableNativeFeedback.Ripple(\n                variables.androidRippleColor,\n                false\n              )\n        }\n        {...rootProps}\n      >\n        <View {...rootProps}>{children}</View>\n      </TouchableNativeFeedback>\n    );\n  }\n}\n\nButton.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  block: PropTypes.bool,\n  primary: PropTypes.bool,\n  transparent: PropTypes.bool,\n  success: PropTypes.bool,\n  danger: PropTypes.bool,\n  warning: PropTypes.bool,\n  info: PropTypes.bool,\n  bordered: PropTypes.bool,\n  disabled: PropTypes.bool,\n  rounded: PropTypes.bool,\n  large: PropTypes.bool,\n  small: PropTypes.bool,\n  active: PropTypes.bool\n};\n\nconst styles = StyleSheet.create({\n  childContainer: {\n    flexShrink: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nconst StyledButton = connectStyle(\n  'NativeBase.Button',\n  {},\n  mapPropsToStyleNames\n)(Button);\nexport { StyledButton as Button };"]},"metadata":{},"sourceType":"script"}