{"ast":null,"code":"import normalizeColor from \"../../modules/normalizeColor\";\n\nvar colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {\n  var color = props[propName];\n\n  if (color === undefined || color === null) {\n    if (isRequired) {\n      return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');\n    }\n\n    return;\n  }\n\n  if (typeof color === 'number') {\n    return;\n  }\n\n  if (normalizeColor(color) === null) {\n    return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\\n' + \"Valid color formats are\\n  - '#f0f' (#rgb)\\n  - '#f0fc' (#rgba)\\n  - '#ff00ff' (#rrggbb)\\n  - '#ff00ff00' (#rrggbbaa)\\n  - 'rgb(255, 255, 255)'\\n  - 'rgba(255, 255, 255, 1.0)'\\n  - 'hsl(360, 100%, 100%)'\\n  - 'hsla(360, 100%, 100%, 1.0)'\\n  - 'transparent'\\n  - 'red'\\n  - 0xff00ff00 (0xrrggbbaa)\\n\");\n  }\n};\n\nvar ColorPropType;\n\nif (process.env.NODE_ENV !== 'production') {\n  ColorPropType = colorPropType.bind(null, false);\n  ColorPropType.isRequired = colorPropType.bind(null, true);\n} else {\n  ColorPropType = function ColorPropType() {};\n}\n\nexport default ColorPropType;","map":{"version":3,"sources":["/home/swapnil/Downloads/Instagram-master (2)/node_modules/react-native-web/src/exports/ColorPropType/index.js"],"names":["normalizeColor","colorPropType","isRequired","props","propName","componentName","location","propFullName","color","undefined","Error","ColorPropType","process","env","NODE_ENV","bind"],"mappings":"AAUA,OAAOA,cAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAASC,UAAT,EAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,aAAtC,EAAqDC,QAArD,EAA+DC,YAA/D,EAA6E;AACjG,MAAMC,KAAK,GAAGL,KAAK,CAACC,QAAD,CAAnB;;AACA,MAAII,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;AACzC,QAAIN,UAAJ,EAAgB;AACd,aAAO,IAAIQ,KAAJ,CACL,cACEJ,QADF,GAEE,IAFF,IAGGC,YAAY,IAAIH,QAHnB,IAIE,0BAJF,GAKEC,aALF,GAME,IAPG,CAAP;AASD;;AACD;AACD;;AAED,MAAI,OAAOG,KAAP,KAAiB,QAArB,EAA+B;AAI7B;AACD;;AAED,MAAIR,cAAc,CAACQ,KAAD,CAAd,KAA0B,IAA9B,EAAoC;AAClC,WAAO,IAAIE,KAAJ,CACL,aACEJ,QADF,GAEE,IAFF,IAGGC,YAAY,IAAIH,QAHnB,IAIE,iBAJF,GAKEC,aALF,GAME,KANF,GAOEG,KAPF,GAQE,IARF,+SADK,CAAP;AAwBD;AACF,CAlDD;;AAoDA,IAAIG,aAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,aAAa,GAAGV,aAAa,CAACc,IAAd,CAAmB,IAAnB,EAAyB,KAAzB,CAAhB;AACAJ,EAAAA,aAAa,CAACT,UAAd,GAA2BD,aAAa,CAACc,IAAd,CAAmB,IAAnB,EAAyB,IAAzB,CAA3B;AACD,CAHD,MAGO;AACLJ,EAAAA,aAAa,GAAG,yBAAW,CAAE,CAA7B;AACD;;AAED,eAAeA,aAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport normalizeColor from '../../modules/normalizeColor';\n\nconst colorPropType = function(isRequired, props, propName, componentName, location, propFullName) {\n  const color = props[propName];\n  if (color === undefined || color === null) {\n    if (isRequired) {\n      return new Error(\n        'Required ' +\n          location +\n          ' `' +\n          (propFullName || propName) +\n          '` was not specified in `' +\n          componentName +\n          '`.'\n      );\n    }\n    return;\n  }\n\n  if (typeof color === 'number') {\n    // Developers should not use a number, but we are using the prop type\n    // both for user provided colors and for transformed ones. This isn't ideal\n    // and should be fixed but will do for now...\n    return;\n  }\n\n  if (normalizeColor(color) === null) {\n    return new Error(\n      'Invalid ' +\n        location +\n        ' `' +\n        (propFullName || propName) +\n        '` supplied to `' +\n        componentName +\n        '`: ' +\n        color +\n        '\\n' +\n        `Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n`\n    );\n  }\n};\n\nlet ColorPropType;\n\nif (process.env.NODE_ENV !== 'production') {\n  ColorPropType = colorPropType.bind(null, false /* isRequired */);\n  ColorPropType.isRequired = colorPropType.bind(null, true /* isRequired */);\n} else {\n  ColorPropType = function() {};\n}\n\nexport default ColorPropType;\n"]},"metadata":{},"sourceType":"module"}