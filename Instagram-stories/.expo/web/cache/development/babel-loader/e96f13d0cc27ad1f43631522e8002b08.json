{"ast":null,"code":"var emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar warnValidStyle = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var camelizeStyleName = require('fbjs/lib/camelizeStyleName');\n\n  var warning = require('fbjs/lib/warning');\n\n  function getComponentName(instanceOrFiber) {\n    if (typeof instanceOrFiber.getName === 'function') {\n      var instance = instanceOrFiber;\n      return instance.getName();\n    }\n\n    if (typeof instanceOrFiber.tag === 'number') {\n      var fiber = instanceOrFiber;\n      var type = fiber.type;\n\n      if (typeof type === 'string') {\n        return type;\n      }\n\n      if (typeof type === 'function') {\n        return type.displayName || type.name;\n      }\n    }\n\n    return null;\n  }\n\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n  var warnedForInfinityValue = false;\n\n  var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner));\n  };\n\n  var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner));\n  };\n\n  var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    warning(false, \"Style property values shouldn't contain a semicolon.%s \" + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, ''));\n  };\n\n  var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner));\n  };\n\n  var warnStyleValueIsInfinity = function warnStyleValueIsInfinity(name, value, owner) {\n    if (warnedForInfinityValue) {\n      return;\n    }\n\n    warnedForInfinityValue = true;\n    warning(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner));\n  };\n\n  var checkRenderMessage = function checkRenderMessage(owner) {\n    var ownerName;\n\n    if (owner != null) {\n      ownerName = getComponentName(owner);\n    } else {}\n\n    if (ownerName) {\n      return '\\n\\nCheck the render method of `' + ownerName + '`.';\n    }\n\n    return '';\n  };\n\n  warnValidStyle = function warnValidStyle(name, value, component) {\n    var owner;\n\n    if (component) {}\n\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name, owner);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name, owner);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value, owner);\n    }\n\n    if (typeof value === 'number') {\n      if (isNaN(value)) {\n        warnStyleValueIsNaN(name, value, owner);\n      } else if (!isFinite(value)) {\n        warnStyleValueIsInfinity(name, value, owner);\n      }\n    }\n  };\n}\n\nexport default warnValidStyle;","map":{"version":3,"sources":["/home/swapnil/Downloads/Instagram-master (2)/node_modules/react-native-web/src/vendor/react-dom/warnValidStyle/index.js"],"names":["emptyFunction","require","warnValidStyle","process","env","NODE_ENV","camelizeStyleName","warning","getComponentName","instanceOrFiber","getName","instance","tag","fiber","type","displayName","name","badVendoredStyleNamePattern","badStyleValueWithSemicolonPattern","warnedStyleNames","warnedStyleValues","warnedForNaNValue","warnedForInfinityValue","warnHyphenatedStyleName","owner","hasOwnProperty","checkRenderMessage","warnBadVendoredStyleName","charAt","toUpperCase","slice","warnStyleValueWithSemicolon","value","replace","warnStyleValueIsNaN","warnStyleValueIsInfinity","ownerName","component","indexOf","test","isNaN","isFinite"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * From React 16.0.0\n * @noflow\n */\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar warnValidStyle = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var camelizeStyleName = require('fbjs/lib/camelizeStyleName');\n  var warning = require('fbjs/lib/warning');\n\n  function getComponentName(instanceOrFiber) {\n    if (typeof instanceOrFiber.getName === 'function') {\n      // Stack reconciler\n      const instance = ((instanceOrFiber: any): ReactInstance);\n      return instance.getName();\n    }\n    if (typeof instanceOrFiber.tag === 'number') {\n      // Fiber reconciler\n      const fiber = ((instanceOrFiber: any): Fiber);\n      const { type } = fiber;\n      if (typeof type === 'string') {\n        return type;\n      }\n      if (typeof type === 'function') {\n        return type.displayName || type.name;\n      }\n    }\n    return null;\n  }\n\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n  var warnedForInfinityValue = false;\n\n  var warnHyphenatedStyleName = function(name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    warning(\n      false,\n      'Unsupported style property %s. Did you mean %s?%s',\n      name,\n      camelizeStyleName(name),\n      checkRenderMessage(owner)\n    );\n  };\n\n  var warnBadVendoredStyleName = function(name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    warning(\n      false,\n      'Unsupported vendor-prefixed style property %s. Did you mean %s?%s',\n      name,\n      name.charAt(0).toUpperCase() + name.slice(1),\n      checkRenderMessage(owner)\n    );\n  };\n\n  var warnStyleValueWithSemicolon = function(name, value, owner) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    warning(\n      false,\n      \"Style property values shouldn't contain a semicolon.%s \" + 'Try \"%s: %s\" instead.',\n      checkRenderMessage(owner),\n      name,\n      value.replace(badStyleValueWithSemicolonPattern, '')\n    );\n  };\n\n  var warnStyleValueIsNaN = function(name, value, owner) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    warning(\n      false,\n      '`NaN` is an invalid value for the `%s` css style property.%s',\n      name,\n      checkRenderMessage(owner)\n    );\n  };\n\n  var warnStyleValueIsInfinity = function(name, value, owner) {\n    if (warnedForInfinityValue) {\n      return;\n    }\n\n    warnedForInfinityValue = true;\n    warning(\n      false,\n      '`Infinity` is an invalid value for the `%s` css style property.%s',\n      name,\n      checkRenderMessage(owner)\n    );\n  };\n\n  var checkRenderMessage = function(owner) {\n    var ownerName;\n    if (owner != null) {\n      // Stack passes the owner manually all the way to CSSPropertyOperations.\n      ownerName = getComponentName(owner);\n    } else {\n      // Fiber doesn't pass it but uses ReactDebugCurrentFiber to track it.\n      // It is only enabled in development and tracks host components too.\n      // var {getCurrentFiberOwnerName} = require('ReactDebugCurrentFiber');\n      //  ownerName = getCurrentFiberOwnerName();\n      // TODO: also report the stack.\n    }\n    if (ownerName) {\n      return '\\n\\nCheck the render method of `' + ownerName + '`.';\n    }\n    return '';\n  };\n\n  warnValidStyle = function(name, value, component) {\n    var owner;\n    if (component) {\n      // TODO: this only works with Stack. Seems like we need to add unit tests?\n      // owner = component._currentElement._owner;\n    }\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name, owner);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name, owner);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value, owner);\n    }\n\n    if (typeof value === 'number') {\n      if (isNaN(value)) {\n        warnStyleValueIsNaN(name, value, owner);\n      } else if (!isFinite(value)) {\n        warnStyleValueIsInfinity(name, value, owner);\n      }\n    }\n  };\n}\n\nexport default warnValidStyle;\n"]},"metadata":{},"sourceType":"module"}